server {
    server_name rotoclone.zone www.rotoclone.zone;

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/rotoclone.zone/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/rotoclone.zone/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    location / {
        proxy_pass http://127.0.0.1:8000;
    }
    
    location /umami/umami.js {
        proxy_pass http://127.0.0.1:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /umami/api/collect {
        proxy_pass http://127.0.0.1:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }


}
server {
    if ($host = www.rotoclone.zone) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = rotoclone.zone) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80 default_server;
    listen [::]:80 default_server;
    server_name rotoclone.zone www.rotoclone.zone;
    return 404; # managed by Certbot
}
server {
    server_name analytics.rotoclone.zone;

    location / {
        proxy_pass http://127.0.0.1:3000;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/rotoclone.zone/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/rotoclone.zone/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = analytics.rotoclone.zone) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name analytics.rotoclone.zone;
    listen 80;
    return 404; # managed by Certbot


}
